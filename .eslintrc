{
  "root": true,
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 9,
    "sourceType": "module",
    "impliedStrict": true,
    "ecmaFeatures": {
      "jsx": true,
      "impliedStrict": true
    }
  },

  "plugins": [
    "prettier",
    "react",
    "babel"
  ],
  "settings": {
    "react": {
      "version": "16.4.2"
    }
  },

  "extends": [
    "plugin:prettier/recommended",
    "eslint:recommended",
    "plugin:react/recommended"
  ],

  "globals": {
    "atob": true,
    "btoa": true,
    "TextEncoder": true,
    "DataView": true,
    "Float32Array": true,
    "Uint32Array": true,
    "Uint16Array": true,
    "Uint8Array": true,
    "ArrayBuffer": true,
    "Buffer": true,
    "Set": true,
    "Map": true,
    "WeakSet": true,
    "WeakMap": true,
    "Symbol": true,
    "Promise": true,
    "Reflect": true,
    "Uint8ClampedArray": true,

    //  For the tests.
    "beforeEach": true,
    "afterEach": true,
    "beforeAll": true,
    "afterAll": true,
    "describe": true,
    "it": true,
    "expect": true,
    "jest": true
  },
  "overrides": [{
    "files": ["*.test.js"],
    "rules": {
      "no-magic-numbers": 'off'
    }
  }, {
    "files": ["*.worker.js"],
    "globals": {
      "self": true,
    }
  }],
  "rules": {
    "prettier/prettier": [ // customizing prettier rules
      'error',
      {
        singleQuote: true,
        trailingComma: 'all',
      },
    ],

    /* annoying to have to escape  */
    "react/no-unescaped-entities": "off",
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-wrap-multilines": ["error"],
    "react/jsx-tag-spacing": ["error", {"beforeSelfClosing": "always"}],
    /*"react/jsx-sort-props": ["error", {
      "callbacksLast": true,
      "shorthandFirst": true,
      "ignoreCase": false
    }],*/
    "react/jsx-pascal-case": ["error"],
    "react/jsx-no-target-blank": ["error"],
    "react/jsx-no-comment-textnodes": ["error"],
    "react/jsx-no-duplicate-props": ["error", {"ignoreCase": true}],
    //not sure about using <p>{'spam'}</p>
    //"react/jsx-no-literals": ["error"],
    "react/jsx-no-bind": ["error", {
      "ignoreRefs": false,
      "allowArrowFunctions": true,
      "allowBind": false
    }],
    // "react/jsx-key": ["error"],
    "react/jsx-handler-names": ["error"],
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-equals-spacing": ["error", "never"],
    "react/jsx-curly-spacing": [2, "never"]
  }
}
